---

type ListItem = {
  text: string;
  href: string;
};

type ListProps = {
  title: string;
  list: ListItem[];
};


const { title, list } = Astro.props as ListProps;
---


<div class="max-w-4xl mx-auto p-4">
    <h1 class="text-4xl font-bold mb-6 bg-gradient-to-br from-rose-900 to-violet-700 bg-clip-text text-transparent mt-2">{title}</h1>
    <ul class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
        {list.map((item :ListItem)=>(
          <li>
              <a href={item.href} class="clickable-card">
              <div class="relative bg-white border border-gray-700/20 rounded-lg p-4 shadow-md transition transform hover:-translate-y-1 hover:shadow-lg surface-overlay-hover h-48 flex items-center justify-center cursor-pointer mt-2">
                <span class="text-lg font-medium text-gray-800 hover:underline">{item.text}</span>
              </div>
              </a>
          </li>
        ))}
      </ul>
  </div>


  <style>
 .surface-overlay-hover::before {
      position: absolute;
      inset: 0;
      border-radius: 0.375rem;
      opacity: 0;
      box-shadow: inset 2px 2px 40px -20px rgba(0, 0, 0, 0.3);
      transition-property: opacity;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      content: '';
      transition-duration: 0.5s;
      z-index: 0; /* Set lower z-index */
    }
    .surface-overlay-hover:hover::before {
      opacity: 1;
    }
    .surface-overlay-hover:hover {
      border-color: transparent;
    }
    .clickable-card {
      display: block;
      position: relative;
      text-decoration: none;
    }
  </style>
